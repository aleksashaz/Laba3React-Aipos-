{"ast":null,"code":"var assert = require('./assert');\n\nvar getTypeName = require('./getTypeName');\n\nmodule.exports = function forbidNewOperator(x, type) {\n  assert(!(x instanceof type), function () {\n    return 'Cannot use the new operator to instantiate the type ' + getTypeName(type);\n  });\n};","map":{"version":3,"sources":["/home/aleksashaz/Aipos/Laba3React-Aipos-/node_modules/tcomb/lib/forbidNewOperator.js"],"names":["assert","require","getTypeName","module","exports","forbidNewOperator","x","type"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,eAAD,CAAzB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,SAASC,iBAAT,CAA2BC,CAA3B,EAA8BC,IAA9B,EAAoC;AACnDP,EAAAA,MAAM,CAAC,EAAEM,CAAC,YAAYC,IAAf,CAAD,EAAuB,YAAY;AAAE,WAAO,yDAAyDL,WAAW,CAACK,IAAD,CAA3E;AAAoF,GAAzH,CAAN;AACD,CAFD","sourcesContent":["var assert = require('./assert');\nvar getTypeName = require('./getTypeName');\n\nmodule.exports = function forbidNewOperator(x, type) {\n  assert(!(x instanceof type), function () { return 'Cannot use the new operator to instantiate the type ' + getTypeName(type); });\n};"]},"metadata":{},"sourceType":"script"}