{"ast":null,"code":"/*! @preserve\n *\n * tcomb.js - Type checking and DDD for JavaScript\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2014-2016 Giulio Canti\n *\n */\n// core\nvar t = require('./lib/assert'); // types\n\n\nt.Any = require('./lib/Any');\nt.Array = require('./lib/Array');\nt.Boolean = require('./lib/Boolean');\nt.Date = require('./lib/Date');\nt.Error = require('./lib/Error');\nt.Function = require('./lib/Function');\nt.Nil = require('./lib/Nil');\nt.Number = require('./lib/Number');\nt.Integer = require('./lib/Integer');\nt.IntegerT = t.Integer;\nt.Object = require('./lib/Object');\nt.RegExp = require('./lib/RegExp');\nt.String = require('./lib/String');\nt.Type = require('./lib/Type');\nt.TypeT = t.Type; // short alias are deprecated\n\nt.Arr = t.Array;\nt.Bool = t.Boolean;\nt.Dat = t.Date;\nt.Err = t.Error;\nt.Func = t.Function;\nt.Num = t.Number;\nt.Obj = t.Object;\nt.Re = t.RegExp;\nt.Str = t.String; // combinators\n\nt.dict = require('./lib/dict');\nt.declare = require('./lib/declare');\nt.enums = require('./lib/enums');\nt.irreducible = require('./lib/irreducible');\nt.list = require('./lib/list');\nt.maybe = require('./lib/maybe');\nt.refinement = require('./lib/refinement');\nt.struct = require('./lib/struct');\nt.tuple = require('./lib/tuple');\nt.union = require('./lib/union');\nt.func = require('./lib/func');\nt.intersection = require('./lib/intersection');\nt.subtype = t.refinement;\nt.inter = require('./lib/interface'); // IE8 alias\n\nt['interface'] = t.inter; // functions\n\nt.assert = t;\nt.update = require('./lib/update');\nt.mixin = require('./lib/mixin');\nt.isType = require('./lib/isType');\nt.is = require('./lib/is');\nt.getTypeName = require('./lib/getTypeName');\nt.match = require('./lib/match');\nmodule.exports = t;","map":{"version":3,"sources":["/home/aleksashaz/Aipos/Laba3React-Aipos-/node_modules/tcomb/index.js"],"names":["t","require","Any","Array","Boolean","Date","Error","Function","Nil","Number","Integer","IntegerT","Object","RegExp","String","Type","TypeT","Arr","Bool","Dat","Err","Func","Num","Obj","Re","Str","dict","declare","enums","irreducible","list","maybe","refinement","struct","tuple","union","func","intersection","subtype","inter","assert","update","mixin","isType","is","getTypeName","match","module","exports"],"mappings":"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","sourcesContent":["/*! @preserve\n *\n * tcomb.js - Type checking and DDD for JavaScript\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2014-2016 Giulio Canti\n *\n */\n\n// core\nvar t = require('./lib/assert');\n\n// types\nt.Any = require('./lib/Any');\nt.Array = require('./lib/Array');\nt.Boolean = require('./lib/Boolean');\nt.Date = require('./lib/Date');\nt.Error = require('./lib/Error');\nt.Function = require('./lib/Function');\nt.Nil = require('./lib/Nil');\nt.Number = require('./lib/Number');\nt.Integer = require('./lib/Integer');\nt.IntegerT = t.Integer;\nt.Object = require('./lib/Object');\nt.RegExp = require('./lib/RegExp');\nt.String = require('./lib/String');\nt.Type = require('./lib/Type');\nt.TypeT = t.Type;\n\n// short alias are deprecated\nt.Arr = t.Array;\nt.Bool = t.Boolean;\nt.Dat = t.Date;\nt.Err = t.Error;\nt.Func = t.Function;\nt.Num = t.Number;\nt.Obj = t.Object;\nt.Re = t.RegExp;\nt.Str = t.String;\n\n// combinators\nt.dict = require('./lib/dict');\nt.declare = require('./lib/declare');\nt.enums = require('./lib/enums');\nt.irreducible = require('./lib/irreducible');\nt.list = require('./lib/list');\nt.maybe = require('./lib/maybe');\nt.refinement = require('./lib/refinement');\nt.struct = require('./lib/struct');\nt.tuple = require('./lib/tuple');\nt.union = require('./lib/union');\nt.func = require('./lib/func');\nt.intersection = require('./lib/intersection');\nt.subtype = t.refinement;\nt.inter = require('./lib/interface'); // IE8 alias\nt['interface'] = t.inter;\n\n// functions\nt.assert = t;\nt.update = require('./lib/update');\nt.mixin = require('./lib/mixin');\nt.isType = require('./lib/isType');\nt.is = require('./lib/is');\nt.getTypeName = require('./lib/getTypeName');\nt.match = require('./lib/match');\n\nmodule.exports = t;\n"]},"metadata":{},"sourceType":"script"}