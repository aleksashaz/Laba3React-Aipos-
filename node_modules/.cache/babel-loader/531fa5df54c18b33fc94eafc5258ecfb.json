{"ast":null,"code":"var _jsxFileName = \"/home/aleksashaz/Aipos/Laba3React-Aipos-/src/components/transport/InputTransport.js\";\nimport React from 'react';\nimport CommonRequests from '../../requests/commonRequests';\n\nclass InputTransport extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      types: null,\n      capacity: null,\n      type: null,\n      name: null,\n      transport: null\n    };\n  }\n\n  componentDidMount() {\n    CommonRequests.getAllTypes().then(res => {\n      if (this.props.match.params.id) {\n        CommonRequests.getTransport(this.props.match.params.id).then(result => {\n          this.setState({\n            types: res,\n            transport: result,\n            capacity: result.capacity,\n            type: result.type,\n            name: result.name\n          });\n        });\n      } else this.setState({\n        types: res\n      });\n    });\n  }\n\n  typeChange(event) {\n    CommonRequests.getType(event.target.value).then(res => {\n      this.setState({\n        type: res\n      });\n    });\n  }\n\n  nameChange(event) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  capacityChange(event) {\n    this.setState({\n      capacity: event.target.value\n    });\n  }\n\n  getArr(arr) {\n    if (arr) {\n      return arr.map(el => React.createElement(\"option\", {\n        value: el.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, el.description));\n    }\n  }\n\n  onclick() {\n    if (this.props.match.params.id != null) {\n      CommonRequests.updateTransport(this.props.match.params.id, this.state.type, this.state.capacity, this.state.name);\n    } else CommonRequests.addTransport(this.state.type, this.state.capacity, this.state.name);\n\n    this.props.history.push('/transports');\n  }\n\n  render() {\n    if (this.state.types) {\n      var {\n        types\n      } = this.state;\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      method: \"post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"input-group-text\",\n      htmlFor: \"inputType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Type\")), React.createElement(\"select\", {\n      onInput: this.typeChange.bind(this),\n      className: \"custom-select\",\n      id: \"inputType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Choose...\"), this.getArr(types))), React.createElement(\"div\", {\n      className: \"input-group mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      id: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Name\")), React.createElement(\"input\", {\n      onInput: this.nameChange.bind(this),\n      type: \"text\",\n      className: \"form-control\",\n      \"aria-label\": \"Name\",\n      \"aria-describedby\": \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"input-group mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      id: \"capacity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Capacity\")), React.createElement(\"input\", {\n      type: \"number\",\n      min: \"0\",\n      onInput: this.capacityChange.bind(this),\n      className: \"form-control\",\n      \"aria-label\": \"Capacity\",\n      \"aria-describedby\": \"capacity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn btn-outline-success p-2\",\n      onClick: e => {\n        this.onclick();\n      },\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Save\"))));\n  }\n\n}\n\nexport default InputTransport;","map":{"version":3,"sources":["/home/aleksashaz/Aipos/Laba3React-Aipos-/src/components/transport/InputTransport.js"],"names":["React","CommonRequests","InputTransport","Component","constructor","props","state","types","capacity","type","name","transport","componentDidMount","getAllTypes","then","res","match","params","id","getTransport","result","setState","typeChange","event","getType","target","value","nameChange","capacityChange","getArr","arr","map","el","description","onclick","updateTransport","addTransport","history","push","render","bind","e"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport CommonRequests from '../../requests/commonRequests';\r\n\r\n\r\nclass InputTransport extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            types: null,\r\n            capacity: null,\r\n            type: null,\r\n            name: null,\r\n            transport: null,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        CommonRequests.getAllTypes()\r\n            .then(res => {\r\n                if (this.props.match.params.id) {\r\n                    CommonRequests.getTransport(this.props.match.params.id)\r\n                        .then(result => {\r\n                            this.setState({ types: res, transport: result, capacity: result.capacity, type: result.type, name: result.name })\r\n                        })\r\n                } else this.setState({ types: res })\r\n            });\r\n    }\r\n\r\n\r\n    typeChange(event) {\r\n        CommonRequests.getType(event.target.value)\r\n            .then(res => {\r\n                this.setState({ type: res })\r\n            })\r\n    }\r\n\r\n\r\n    nameChange(event) {\r\n        this.setState({ name: event.target.value })\r\n    }\r\n\r\n    capacityChange(event) {\r\n        this.setState({ capacity: event.target.value })\r\n    }\r\n\r\n    getArr(arr) {\r\n        if (arr) {\r\n            return arr.map((el) => <option value={el.id}>{el.description}</option>\r\n            );\r\n        }\r\n    }\r\n\r\n    onclick() {\r\n        if (this.props.match.params.id != null) {\r\n            CommonRequests.updateTransport(this.props.match.params.id, this.state.type, this.state.capacity, this.state.name);\r\n\r\n        } else CommonRequests.addTransport(this.state.type, this.state.capacity, this.state.name);\r\n\r\n       this.props.history.push('/transports');\r\n    }\r\n\r\n    render() {\r\n        if (this.state.types) {\r\n            var { types } = this.state;\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <form method=\"post\">\r\n                    <div className=\"container p-2\">\r\n                        <div className=\"input-group mb-3\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <label className=\"input-group-text\" htmlFor=\"inputType\">Type</label>\r\n                            </div>\r\n                            <select onInput={this.typeChange.bind(this)} className=\"custom-select\" id=\"inputType\">\r\n                                <option selected>Choose...</option>\r\n                                {this.getArr(types)}\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"input-group mb-3\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\" id=\"name\">Name</span>\r\n                            </div>\r\n                            <input onInput={this.nameChange.bind(this)} type=\"text\" className=\"form-control\" aria-label=\"Name\" aria-describedby=\"name\" />\r\n                        </div>\r\n                        <div className=\"input-group mb-3\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\" id=\"capacity\">Capacity</span>\r\n                            </div>\r\n                            <input type=\"number\" min=\"0\" onInput={this.capacityChange.bind(this)} className=\"form-control\" aria-label=\"Capacity\" aria-describedby=\"capacity\" />\r\n                        </div>\r\n\r\n                        <button className=\"btn btn-outline-success p-2\" onClick={(e) => { this.onclick(); }} type=\"button\">Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputTransport;"]},"metadata":{},"sourceType":"module"}