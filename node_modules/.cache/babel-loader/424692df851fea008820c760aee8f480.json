{"ast":null,"code":"var _jsxFileName = \"/home/aleksashaz/Aipos/Laba3React-Aipos-/src/components/route/RouteComponent.js\";\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport CommonRequests from '../../requests/commonRequests';\nimport { BrowserRouter, Link } from 'react-router-dom';\n\nclass RouteComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  getOpportunities() {\n    const {\n      update\n    } = this.props;\n\n    if (this.props.join == true) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-flex justify-content-around mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        className: \"m-2\",\n        icon: faTrash,\n        onClick: e => {\n          // CommonRequests.deleteRoute(this.props.id);\n          update(this.props.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }), React.createElement(Link, {\n        type: \"button\",\n        to: `/routes/${this.props.id}/join`,\n        className: \"btn btn-primary m-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Join\"), React.createElement(FontAwesomeIcon, {\n        className: \"m-2\",\n        icon: faEdit,\n        onClick: e => {\n          this.props.history.push('/routes/' + this.props.id + '/update');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      })));\n    }\n  }\n\n  formatDate(date) {\n    if (date != null) {\n      var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      var day = date.getDate();\n      var monthIndex = date.getMonth();\n      var year = date.getFullYear();\n      return day + ' ' + monthNames[monthIndex] + ' ' + year;\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"card d-flex justify-content-around\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.props.transportName), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.props.transportType), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"From: \", this.props.departureAddress), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.formatDate(new Date(this.props.depDateTime))), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"To: \", this.props.arrivalAddress), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.formatDate(new Date(this.props.arrDateTime))), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Free seats: \", this.props.freeSeats), this.getOpportunities());\n  }\n\n}\n\nexport default RouteComponent;","map":{"version":3,"sources":["/home/aleksashaz/Aipos/Laba3React-Aipos-/src/components/route/RouteComponent.js"],"names":["React","FontAwesomeIcon","faTrash","faEdit","CommonRequests","BrowserRouter","Link","RouteComponent","Component","constructor","props","state","getOpportunities","update","join","e","id","history","push","formatDate","date","monthNames","day","getDate","monthIndex","getMonth","year","getFullYear","render","transportName","transportType","departureAddress","Date","depDateTime","arrivalAddress","arrDateTime","freeSeats"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport CommonRequests from '../../requests/commonRequests';\r\nimport { BrowserRouter, Link } from 'react-router-dom';\r\n\r\nclass RouteComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    getOpportunities() {\r\n        const { update } = this.props\r\n        if (this.props.join == true) {\r\n            return ( <div>\r\n\r\n                <div className=\"d-flex justify-content-around mb-4\">\r\n                    <FontAwesomeIcon className=\"m-2\" icon={faTrash} onClick={(e) => { \r\n                        // CommonRequests.deleteRoute(this.props.id);\r\n                        update(this.props.id);\r\n                    }} />\r\n                    <Link type=\"button\" to={`/routes/${this.props.id}/join`} className=\"btn btn-primary m-3\">Join</Link>\r\n                    <FontAwesomeIcon className=\"m-2\" icon={faEdit} onClick={(e) => {this.props.history.push('/routes/' + this.props.id + '/update');  }}/>\r\n                </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    formatDate(date) {\r\n\t\tif (date != null) {\r\n\t\t\tvar monthNames = [\r\n\t\t\t\t\"January\", \"February\", \"March\",\r\n\t\t\t\t\"April\", \"May\", \"June\", \"July\",\r\n\t\t\t\t\"August\", \"September\", \"October\",\r\n\t\t\t\t\"November\", \"December\"\r\n\t\t\t];\r\n\r\n\t\t\tvar day = date.getDate();\r\n\t\t\tvar monthIndex = date.getMonth();\r\n\t\t\tvar year = date.getFullYear();\r\n\r\n\t\t\treturn day + ' ' + monthNames[monthIndex] + ' ' + year;\r\n\t\t}\r\n\t}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card d-flex justify-content-around\">\r\n                <h4>{this.props.transportName}</h4>\r\n                <h6>{this.props.transportType}</h6>\r\n                <h4>From: {this.props.departureAddress}</h4> \r\n                <h6>{this.formatDate(new Date(this.props.depDateTime))}</h6>\r\n                <h4>To: {this.props.arrivalAddress}</h4>\r\n                <h6>{this.formatDate(new Date(this.props.arrDateTime))}</h6>\r\n                <strong>Free seats: {this.props.freeSeats}</strong>\r\n                {this.getOpportunities()}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RouteComponent;"]},"metadata":{},"sourceType":"module"}