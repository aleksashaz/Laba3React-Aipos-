{"ast":null,"code":"import asyncAPI from '../api';\n\nconst getAllRoutes = () => {\n  return asyncAPI('getJSON', {\n    url: `/routes/all`\n  });\n};\n\nconst deleteRoute = input_route_id => {\n  return asyncAPI('deleteJSON', {\n    url: `/routes/` + input_route_id + `/delete`\n  });\n};\n\nconst getAllTypes = () => {\n  return asyncAPI('getJSON', {\n    url: `/types/all`\n  });\n};\n\nconst getType = input_id => {\n  return asyncAPI('getJSON', {\n    url: `/types/` + input_id\n  });\n};\n\nconst getRoute = input_id => {\n  return asyncAPI('getJSON', {\n    url: `/routes/` + input_id\n  });\n};\n\nconst getTransport = input_id => {\n  return asyncAPI('getJSON', {\n    url: `/transports/` + input_id\n  });\n};\n\nconst getAllTransports = () => {\n  return asyncAPI('getJSON', {\n    url: `/transports/all`\n  });\n};\n\nconst deleteTransport = input_transport_id => {\n  return asyncAPI('deleteJSON', {\n    url: `/transports/` + input_transport_id + `/delete`\n  });\n};\n\nconst updateTransport = (input_id, input_type, input_capacity, input_name) => {\n  const action = {\n    type: input_type,\n    capacity: input_capacity,\n    name: input_name\n  };\n  return asyncAPI('postJSON', {\n    url: `/transports/` + input_id + `/update`,\n    data: action\n  });\n};\n\nconst addTransport = (input_type, input_capacity, input_name) => {\n  const action = {\n    type: input_type,\n    capacity: input_capacity,\n    name: input_name\n  };\n  return asyncAPI('postJSON', {\n    url: `/transports/add`,\n    data: action\n  });\n};\n\nconst watchUserRoutes = input_login => {\n  return asyncAPI('getJSON', {\n    url: `/users/` + input_login + `/watchRoutes`\n  });\n};\n\nconst addRoute = (input_d_country, input_d_city, input_d_street, input_d_number, input_country, input_city, input_street, input_number, input_d_date_time, input_date_time, input_transport) => {\n  const action = {\n    departureAddress: {\n      country: input_d_country,\n      city: input_d_city,\n      street: input_d_street,\n      number: input_d_number\n    },\n    arrivalAddress: {\n      country: input_country,\n      city: input_city,\n      street: input_street,\n      number: input_number\n    },\n    departureDateTime: input_d_date_time,\n    arrivalDateTime: input_date_time,\n    transport: input_transport\n  };\n  return asyncAPI('postJSON', {\n    url: `/routes/add`,\n    data: action\n  });\n};\n\nconst updateRoute = (input_id, input_d_country, input_d_city, input_d_street, input_d_number, input_country, input_city, input_street, input_number, input_d_date_time, input_date_time, input_transport) => {\n  const action = {\n    departureAddress: {\n      country: input_d_country,\n      city: input_d_city,\n      street: input_d_street,\n      number: input_d_number\n    },\n    arrivalAddress: {\n      country: input_country,\n      city: input_city,\n      street: input_street,\n      number: input_number\n    },\n    departureDateTime: input_d_date_time,\n    arrivalDateTime: input_date_time,\n    transport: input_transport\n  };\n  return asyncAPI('postJSON', {\n    url: `/routes/` + input_id + '/update',\n    data: action\n  });\n};\n\nconst joinRoute = (input_route, input_login) => {\n  const action = {\n    login: input_login\n  };\n  return asyncAPI('postJSON', {\n    url: `/routes/` + input_route + '/join',\n    data: action\n  });\n};\n\nconst existByLogin = input_login => {\n  return asyncAPI('getJSON', {\n    url: `/users/` + input_login\n  });\n};\n\nexport default {\n  watchUserRoutes,\n  deleteRoute,\n  deleteTransport,\n  getAllRoutes,\n  getAllTransports,\n  getAllTypes,\n  addTransport,\n  addRoute,\n  updateTransport,\n  joinRoute,\n  getType,\n  getTransport,\n  existByLogin,\n  updateRoute,\n  getRoute\n};","map":{"version":3,"sources":["/home/aleksashaz/Aipos/Laba3React-Aipos-/src/requests/commonRequests.js"],"names":["asyncAPI","getAllRoutes","url","deleteRoute","input_route_id","getAllTypes","getType","input_id","getRoute","getTransport","getAllTransports","deleteTransport","input_transport_id","updateTransport","input_type","input_capacity","input_name","action","type","capacity","name","data","addTransport","watchUserRoutes","input_login","addRoute","input_d_country","input_d_city","input_d_street","input_d_number","input_country","input_city","input_street","input_number","input_d_date_time","input_date_time","input_transport","departureAddress","country","city","street","number","arrivalAddress","departureDateTime","arrivalDateTime","transport","updateRoute","joinRoute","input_route","login","existByLogin"],"mappings":"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","sourcesContent":["import asyncAPI from '../api'\r\n\r\nconst getAllRoutes = () => {\r\n    return asyncAPI('getJSON', {\r\n        url: `/routes/all`,\r\n    })\r\n}\r\n\r\nconst deleteRoute = (input_route_id) => {\r\n    return asyncAPI('deleteJSON', {\r\n        url: `/routes/` + input_route_id + `/delete`,\r\n    })\r\n}\r\n\r\nconst getAllTypes = () => {\r\n    return asyncAPI('getJSON', {\r\n        url: `/types/all`,\r\n    })\r\n}\r\n\r\nconst getType = (input_id) => {\r\n    return asyncAPI('getJSON', {\r\n        url: `/types/` + input_id,\r\n    })\r\n}\r\n\r\nconst getRoute = (input_id) => {\r\n    return asyncAPI('getJSON', {\r\n        url: `/routes/` + input_id,\r\n    })\r\n}\r\n\r\nconst getTransport = (input_id) => {\r\n    return asyncAPI('getJSON', {\r\n        url: `/transports/` + input_id,\r\n    })\r\n}\r\n\r\nconst getAllTransports = () => {\r\n    return asyncAPI('getJSON', {\r\n        url: `/transports/all`,\r\n    })\r\n}\r\n\r\nconst deleteTransport = (input_transport_id) => {\r\n    return asyncAPI('deleteJSON', {\r\n        url: `/transports/` + input_transport_id + `/delete`,\r\n    })\r\n}\r\n\r\nconst updateTransport = (input_id, input_type, input_capacity, input_name) => {\r\n    const action = {\r\n        type: input_type,\r\n        capacity: input_capacity,\r\n        name: input_name,        \r\n    }\r\n    return asyncAPI('postJSON', {\r\n        url: `/transports/`+ input_id + `/update`,\r\n        data: action,\r\n    })\r\n}\r\n\r\nconst addTransport = (input_type, input_capacity, input_name) => {\r\n    const action = {\r\n        type: input_type,\r\n        capacity: input_capacity,\r\n        name: input_name,        \r\n    }\r\n    return asyncAPI('postJSON', {\r\n        url: `/transports/add`,\r\n        data: action,\r\n    })\r\n}\r\n\r\nconst watchUserRoutes = (input_login) => {\r\n    return asyncAPI('getJSON', {\r\n        url: `/users/` + input_login + `/watchRoutes`,\r\n    })\r\n}\r\n\r\nconst addRoute = (input_d_country, input_d_city, input_d_street, input_d_number, input_country, input_city, input_street, input_number, input_d_date_time, input_date_time, input_transport) => {\r\n    const action = {\r\n        departureAddress: {\r\n            country: input_d_country,\r\n            city: input_d_city,\r\n            street: input_d_street,\r\n            number: input_d_number,\r\n        },\r\n        arrivalAddress: {\r\n            country: input_country,\r\n            city: input_city,\r\n            street: input_street,\r\n            number: input_number,\r\n        },\r\n        departureDateTime: input_d_date_time,\r\n        arrivalDateTime: input_date_time,\r\n        transport : input_transport       \r\n    }\r\n    return asyncAPI('postJSON', {\r\n        url: `/routes/add`,\r\n        data: action,\r\n    })\r\n}\r\n\r\nconst updateRoute = (input_id, input_d_country, input_d_city, input_d_street, input_d_number, input_country, input_city, input_street, input_number, input_d_date_time, input_date_time, input_transport) => {\r\n    const action = {\r\n        departureAddress: {\r\n            country: input_d_country,\r\n            city: input_d_city,\r\n            street: input_d_street,\r\n            number: input_d_number,\r\n        },\r\n        arrivalAddress: {\r\n            country: input_country,\r\n            city: input_city,\r\n            street: input_street,\r\n            number: input_number,\r\n        },\r\n        departureDateTime: input_d_date_time,\r\n        arrivalDateTime: input_date_time,\r\n        transport : input_transport       \r\n    }\r\n    return asyncAPI('postJSON', {\r\n        url: `/routes/` + input_id + '/update',\r\n        data: action,\r\n    })\r\n}\r\n\r\nconst joinRoute = (input_route, input_login) => {\r\n    const action = {\r\n        login: input_login,       \r\n    }\r\n    return asyncAPI('postJSON', {\r\n        url: `/routes/` + input_route + '/join',\r\n        data: action,\r\n    })\r\n}\r\n\r\nconst existByLogin = (input_login) => {\r\n    return asyncAPI('getJSON', {\r\n        url: `/users/` + input_login,\r\n    })\r\n}\r\n\r\n\r\nexport default {\r\n    watchUserRoutes,\r\n    deleteRoute,\r\n    deleteTransport, \r\n    getAllRoutes,\r\n    getAllTransports, \r\n    getAllTypes, \r\n    addTransport, \r\n    addRoute, \r\n    updateTransport,\r\n    joinRoute,\r\n    getType,\r\n    getTransport,\r\n    existByLogin,\r\n    updateRoute,\r\n    getRoute\r\n}\r\n"]},"metadata":{},"sourceType":"module"}