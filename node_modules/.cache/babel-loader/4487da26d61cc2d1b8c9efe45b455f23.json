{"ast":null,"code":"var _jsxFileName = \"/home/aleksashaz/Aipos/Laba3React-Aipos-/src/components/route/Routes.js\";\nimport React from 'react';\nimport RouteComponent from './RouteComponent';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport CommonRequests from '../../requests/commonRequests';\n\nclass Routes extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.update = input_id => {\n      CommonRequests.deleteRoute(input_id).then(res => {\n        this.setState({\n          routes: res\n        });\n      });\n    };\n\n    this.state = {\n      routes: null\n    };\n  }\n\n  componentDidMount() {\n    CommonRequests.getAllRoutes().then(res => {\n      this.setState({\n        routes: res\n      });\n    });\n  }\n\n  componentWillMount() {\n    CommonRequests.getAllRoutes().then(res => {\n      this.setState({\n        routes: res\n      });\n    });\n  }\n\n  getArr(arr) {\n    if (arr) {\n      return arr.map(el => React.createElement(RouteComponent, Object.assign({\n        departureAddress: el.departureAddress.country + ' ' + el.departureAddress.city,\n        arrivalAddress: el.arrivalAddress.country + ' ' + el.arrivalAddress.city,\n        id: el.id,\n        depDateTime: el.departureDateTime,\n        arrDateTime: el.arrivalDateTime,\n        freeSeats: el.freeSeats,\n        transportName: el.transport.name,\n        transportType: el.transport.type.description,\n        update: this.update\n      }, this.props, {\n        join: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })));\n    }\n  }\n\n  render() {\n    if (this.state.routes) {\n      var {\n        routes\n      } = this.state;\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.getArr(routes), React.createElement(\"div\", {\n      onClick: e => {\n        this.props.history.push('/routes/add');\n      },\n      className: \"card addCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      size: \"8x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Routes;","map":{"version":3,"sources":["/home/aleksashaz/Aipos/Laba3React-Aipos-/src/components/route/Routes.js"],"names":["React","RouteComponent","FontAwesomeIcon","faPlus","CommonRequests","Routes","Component","constructor","props","update","input_id","deleteRoute","then","res","setState","routes","state","componentDidMount","getAllRoutes","componentWillMount","getArr","arr","map","el","departureAddress","country","city","arrivalAddress","id","departureDateTime","arrivalDateTime","freeSeats","transport","name","type","description","render","e","history","push"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport RouteComponent from './RouteComponent';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport CommonRequests from '../../requests/commonRequests';\r\n\r\nclass Routes extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      routes: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    CommonRequests.getAllRoutes()\r\n      .then(res => {\r\n        this.setState({ routes: res })\r\n      });\r\n  }\r\n\r\n  componentWillMount() {\r\n    CommonRequests.getAllRoutes()\r\n      .then(res => {\r\n        this.setState({ routes: res })\r\n      });\r\n  }\r\n\r\n  update = (input_id) => {\r\n    CommonRequests.deleteRoute(input_id)\r\n      .then(res => {\r\n        this.setState({ routes: res})\r\n      });\r\n  }\r\n\r\n  getArr(arr) {\r\n    if (arr) {\r\n      return arr.map((el) => <RouteComponent\r\n        departureAddress={el.departureAddress.country + ' ' + el.departureAddress.city}\r\n        arrivalAddress={el.arrivalAddress.country + ' ' + el.arrivalAddress.city}\r\n        id={el.id} depDateTime={el.departureDateTime}\r\n        arrDateTime={el.arrivalDateTime}\r\n        freeSeats={el.freeSeats}\r\n        transportName={el.transport.name}\r\n        transportType={el.transport.type.description}\r\n        update={this.update}\r\n        {...this.props}\r\n        join/>);\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    if (this.state.routes) {\r\n      var { routes } = this.state;\r\n    }\r\n    return (\r\n      <div className=\"container row\">\r\n        {this.getArr(routes)}\r\n     \r\n        <div onClick={(e) => { this.props.history.push('/routes/add'); }} className=\"card addCard\">\r\n          <FontAwesomeIcon icon={faPlus} size=\"8x\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;"]},"metadata":{},"sourceType":"module"}