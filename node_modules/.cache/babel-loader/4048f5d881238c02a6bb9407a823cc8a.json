{"ast":null,"code":"var isType = require('./isType');\n\nfunction isRefinement(type) {\n  return isType(type) && type.meta.kind === 'subtype';\n}\n\nfunction getPredicates(type) {\n  return isRefinement(type) ? [type.meta.predicate].concat(getPredicates(type.meta.type)) : [];\n}\n\nfunction getUnrefinedType(type) {\n  return isRefinement(type) ? getUnrefinedType(type.meta.type) : type;\n}\n\nfunction decompose(type) {\n  return {\n    predicates: getPredicates(type),\n    unrefinedType: getUnrefinedType(type)\n  };\n}\n\nmodule.exports = decompose;","map":{"version":3,"sources":["/home/aleksashaz/Aipos/Laba3React-Aipos-/node_modules/tcomb/lib/decompose.js"],"names":["isType","require","isRefinement","type","meta","kind","getPredicates","predicate","concat","getUnrefinedType","decompose","predicates","unrefinedType","module","exports"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;;AAEA,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,SAAOH,MAAM,CAACG,IAAD,CAAN,IAAgBA,IAAI,CAACC,IAAL,CAAUC,IAAV,KAAmB,SAA1C;AACD;;AAED,SAASC,aAAT,CAAuBH,IAAvB,EAA6B;AAC3B,SAAOD,YAAY,CAACC,IAAD,CAAZ,GACL,CAACA,IAAI,CAACC,IAAL,CAAUG,SAAX,EAAsBC,MAAtB,CAA6BF,aAAa,CAACH,IAAI,CAACC,IAAL,CAAUD,IAAX,CAA1C,CADK,GAEL,EAFF;AAGD;;AAED,SAASM,gBAAT,CAA0BN,IAA1B,EAAgC;AAC9B,SAAOD,YAAY,CAACC,IAAD,CAAZ,GACLM,gBAAgB,CAACN,IAAI,CAACC,IAAL,CAAUD,IAAX,CADX,GAELA,IAFF;AAGD;;AAED,SAASO,SAAT,CAAmBP,IAAnB,EAAyB;AACvB,SAAO;AACLQ,IAAAA,UAAU,EAAEL,aAAa,CAACH,IAAD,CADpB;AAELS,IAAAA,aAAa,EAAEH,gBAAgB,CAACN,IAAD;AAF1B,GAAP;AAID;;AAEDU,MAAM,CAACC,OAAP,GAAiBJ,SAAjB","sourcesContent":["var isType = require('./isType');\n\nfunction isRefinement(type) {\n  return isType(type) && type.meta.kind === 'subtype';\n}\n\nfunction getPredicates(type) {\n  return isRefinement(type) ?\n    [type.meta.predicate].concat(getPredicates(type.meta.type)) :\n    [];\n}\n\nfunction getUnrefinedType(type) {\n  return isRefinement(type) ?\n    getUnrefinedType(type.meta.type) :\n    type;\n}\n\nfunction decompose(type) {\n  return {\n    predicates: getPredicates(type),\n    unrefinedType: getUnrefinedType(type)\n  };\n}\n\nmodule.exports = decompose;"]},"metadata":{},"sourceType":"script"}