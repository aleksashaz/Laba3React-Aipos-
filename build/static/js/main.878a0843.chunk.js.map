{"version":3,"sources":["components/Home.js","api/asyncApi.js","api/index.js","requests/commonRequests.js","history.js","components/Login.js","components/route/RouteComponent.js","components/route/Routes.js","components/route/MyRoutes.js","components/transport/Transport.js","components/transport/TransportList.js","components/transport/InputTransport.js","components/route/InputRoute.js","App.js","serviceWorker.js","index.js"],"names":["Home","React","Component","stringify","JSON","headers","credentials","Accept","getFullUrl","url","params","Object","keys","map","k","encodeURIComponent","join","queryParams","async","getJSON","fetch","postJSON","data","options","console","log","method","body","mode","deleteJSON","asyncAPI","args","then","response","json","catch","error","input_login","input_route_id","input_transport_id","input_type","input_capacity","input_name","type","capacity","name","input_d_country","input_d_city","input_d_street","input_d_number","input_country","input_city","input_street","input_number","input_d_date_time","input_date_time","input_transport","departureAddress","country","city","street","number","arrivalAddress","departureDateTime","arrivalDateTime","transport","input_id","input_route","login","createHistory","Login","props","state","event","this","setState","target","value","match","id","CommonRequests","history","push","res","className","onInput","loginChange","bind","placeholder","aria-label","aria-describedby","onClick","e","onclick","RouteComponent","update","icon","faTrash","Link","to","faEdit","date","day","getDate","monthIndex","getMonth","year","getFullYear","transportName","transportType","formatDate","Date","depDateTime","arrDateTime","freeSeats","getOpportunities","Routes","routes","arr","el","description","getArr","faPlus","size","MyRoutes","Transport","TransportList","transports","InputTransport","types","result","htmlFor","typeChange","selected","nameChange","min","capacityChange","InputRoute","depDateChange","arrDateChange","depCountry","depCity","depStreet","depNumber","arrCountry","arrCity","arrStreet","arrNumber","route","for","transportChange","depCountryChange","depCityChange","depStreetChange","depNumberChange","onChange","minDate","arrCountryChange","arrCityChange","arrStreetChange","arrNumberChange","App","Router","Route","path","exact","component","strict","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2RAceA,E,iLATP,OACI,6BACA,wD,GALOC,IAAMC,W,QCAjBC,EAAcC,KAAdD,UAEFE,EAAU,CACZC,YAAa,UACb,eAAgB,mBAChBC,OAAQ,iCACR,8BAA+B,IAGnCF,cAAwB,UAIlBG,EAAa,SAACC,EAAKC,GAAN,MAFC,0BAGFD,GAAO,KAAOC,EAAS,IAEzC,SAAqBA,GACjB,OAAOC,OAAOC,KAAKF,GACdG,KAAI,SAAAC,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmBL,EAAOI,OACjEE,KAAK,KALiCC,CAAYP,GAAU,KAQrE,IAEMQ,EAAQ,CACVC,QADU,YACe,IAAfV,EAAc,EAAdA,IAAKC,EAAS,EAATA,OACX,OAAOU,MAAMZ,EAAWC,EAAKC,GAAS,CAClCL,UACAC,YANQ,iBAShBe,SAPU,YAOqC,IAApCZ,EAAmC,EAAnCA,IAAKa,EAA8B,EAA9BA,KAAMZ,EAAwB,EAAxBA,OAAwB,IAAhBa,eAAgB,MAAN,GAAM,EAE1C,OADAC,QAAQC,IAAItB,EAAUmB,IACfF,MAAMZ,EAAWC,EAAKC,GAAjB,eACLa,EADK,CAERlB,UACAC,YAdQ,cAeRoB,OAAQ,OACRC,KAAMxB,EAAUmB,GAChBM,KAAM,WAGdC,WAlBU,YAkB+B,IAA5BpB,EAA2B,EAA3BA,IAAKa,EAAsB,EAAtBA,KAAsB,IAAhBC,eAAgB,MAAN,GAAM,EACpC,OAAOH,MAAMZ,EAAWC,GAAZ,eACLc,EADK,CAERlB,UACAC,YAxBQ,cAyBRoB,OAAQ,SACRC,KAAMxB,EAAUmB,QChDbQ,EDqDA,SAACJ,GAAqB,IAAD,uBAATK,EAAS,iCAATA,EAAS,kBAChC,OAAOb,EAAMQ,GAAN,MAAAR,EAAiBa,GACnBC,MAAK,SAAAC,GACF,OACWA,EAASC,UAIvBC,OAAM,SAAAC,QEkFA,EAvES,SAACC,GACrB,OAAOP,EAAS,UAAW,CACvBrB,IAAK,UAAY4B,EAAZ,kBAqEE,EAzIK,SAACC,GACjB,OAAOR,EAAS,aAAc,CAC1BrB,IAAK,WAAa6B,EAAb,aAuIE,EArGS,SAACC,GACrB,OAAOT,EAAS,aAAc,CAC1BrB,IAAK,eAAiB8B,EAAjB,aAmGE,EA/IM,WACjB,OAAOT,EAAS,UAAW,CACvBrB,IAAI,iBA6IG,EA3GU,WACrB,OAAOqB,EAAS,UAAW,CACvBrB,IAAI,qBAyGG,EAnIK,WAChB,OAAOqB,EAAS,UAAW,CACvBrB,IAAI,gBAiIG,EAnFM,SAAC+B,EAAYC,EAAgBC,GAM9C,OAAOZ,EAAS,WAAY,CACxBrB,IAAI,kBACJa,KAPW,CACXqB,KAAMH,EACNI,SAAUH,EACVI,KAAMH,MA+EC,EAjEE,SAACI,EAAiBC,EAAcC,EAAgBC,EAAgBC,EAAeC,EAAYC,EAAcC,EAAcC,EAAmBC,EAAiBC,GAkBxK,OAAO1B,EAAS,WAAY,CACxBrB,IAAI,cACJa,KAnBW,CACXmC,iBAAkB,CACdC,QAASZ,EACTa,KAAMZ,EACNa,OAAQZ,EACRa,OAAQZ,GAEZa,eAAgB,CACZJ,QAASR,EACTS,KAAMR,EACNS,OAAQR,EACRS,OAAQR,GAEZU,kBAAmBT,EACnBU,gBAAiBT,EACjBU,UAAYT,MAiDL,EA/FS,SAACU,EAAU1B,EAAYC,EAAgBC,GAM3D,OAAOZ,EAAS,WAAY,CACxBrB,IAAK,eAAgByD,EAAhB,UACL5C,KAPW,CACXqB,KAAMH,EACNI,SAAUH,EACVI,KAAMH,MA2FC,EAjBG,SAACyB,EAAa9B,GAI5B,OAAOP,EAAS,WAAY,CACxBrB,IAAK,WAAa0D,EAAc,QAChC7C,KALW,CACX8C,MAAO/B,MAeA,EA7HC,SAAC6B,GACb,OAAOpC,EAAS,UAAW,CACvBrB,IAAK,UAAYyD,KA2HV,EAjHM,SAACA,GAClB,OAAOpC,EAAS,UAAW,CACvBrB,IAAK,eAAiByD,KA+Gf,EAPM,SAAC7B,GAClB,OAAOP,EAAS,UAAW,CACvBrB,IAAK,UAAY4B,KAKV,EAzCK,SAAC6B,EAAUpB,EAAiBC,EAAcC,EAAgBC,EAAgBC,EAAeC,EAAYC,EAAcC,EAAcC,EAAmBC,EAAiBC,GAkBrL,OAAO1B,EAAS,WAAY,CACxBrB,IAAK,WAAayD,EAAW,UAC7B5C,KAnBW,CACXmC,iBAAkB,CACdC,QAASZ,EACTa,KAAMZ,EACNa,OAAQZ,EACRa,OAAQZ,GAEZa,eAAgB,CACZJ,QAASR,EACTS,KAAMR,EACNS,OAAQR,EACRS,OAAQR,GAEZU,kBAAmBT,EACnBU,gBAAiBT,EACjBU,UAAYT,MAyBL,EAvHE,SAACU,GACd,OAAOpC,EAAS,UAAW,CACvBrB,IAAK,WAAayD,K,SC3BXG,E,MAAAA,KCmDAC,E,YA/Cb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXJ,MAAO,MAHQ,E,yEAOPK,GACVC,KAAKC,SAAS,CAAEP,MAAOK,EAAMG,OAAOC,U,gCAI3B,IAAD,OACJH,KAAKH,MAAMO,MAAMpE,OAAOqE,IAC1BC,EAAyBN,KAAKH,MAAMO,MAAMpE,OAAOqE,GAAIL,KAAKF,MAAMJ,OAChEM,KAAKH,MAAMU,QAAQC,KAAK,YAExBF,EAA4BN,KAAKF,MAAMJ,OACpCpC,MAAK,SAAAmD,GACO,GAAPA,EACF,EAAKZ,MAAMU,QAAQC,KAAK,UAAY,EAAKV,MAAMJ,MAAQ,gBAEvD,EAAKG,MAAMU,QAAQC,KAAK,U,+BAMxB,IAAD,OACP,OACE,yBAAKE,UAAU,aACb,0BAAM1D,OAAO,QACX,6BACE,yBAAK0D,UAAU,oBACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBL,GAAG,QAAtC,UAEF,2BAAOpC,KAAK,OAAO0C,QAASX,KAAKY,YAAYC,KAAKb,MAAOU,UAAU,eAAeI,YAAY,OAAOC,aAAW,OAAOC,mBAAiB,WAG5I,4BAAQN,UAAU,8BAA8BO,QAAS,SAACC,GAAO,EAAKC,WAAalD,KAAK,UAAxF,gB,GAzCU1C,IAAMC,W,yBC6DX4F,E,YAzDX,WAAYvB,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GAFE,E,gFAKC,IAAD,OACPuB,EAAWrB,KAAKH,MAAhBwB,OACR,GAAuB,GAAnBrB,KAAKH,MAAMvD,KACX,OAAS,6BAEL,yBAAKoE,UAAU,sCACX,kBAAC,IAAD,CAAiBA,UAAU,MAAMY,KAAMC,IAASN,QAAS,SAACC,GAEtDG,EAAO,EAAKxB,MAAMQ,OAEtB,kBAACmB,EAAA,EAAD,CAAMvD,KAAK,SAASwD,GAAE,kBAAazB,KAAKH,MAAMQ,GAAxB,SAAmCK,UAAU,uBAAnE,QACA,kBAAC,IAAD,CAAiBA,UAAU,MAAMY,KAAMI,IAAQT,QAAS,SAACC,GAAO,EAAKrB,MAAMU,QAAQC,KAAK,WAAa,EAAKX,MAAMQ,GAAK,kB,iCAO1HsB,GACb,GAAY,MAARA,EAAc,CACjB,IAOIC,EAAMD,EAAKE,UACXC,EAAaH,EAAKI,WAClBC,EAAOL,EAAKM,cAEhB,OAAOL,EAAM,IAXI,CAChB,UAAW,WAAY,QACvB,QAAS,MAAO,OAAQ,OACxB,SAAU,YAAa,UACvB,WAAY,YAOiBE,GAAc,IAAME,K,+BAK7C,OACI,yBAAKtB,UAAU,sCACX,4BAAKV,KAAKH,MAAMqC,eAChB,4BAAKlC,KAAKH,MAAMsC,eAChB,qCAAWnC,KAAKH,MAAMd,kBACtB,4BAAKiB,KAAKoC,WAAW,IAAIC,KAAKrC,KAAKH,MAAMyC,eACzC,mCAAStC,KAAKH,MAAMT,gBACpB,4BAAKY,KAAKoC,WAAW,IAAIC,KAAKrC,KAAKH,MAAM0C,eACzC,+CAAqBvC,KAAKH,MAAM2C,WAC/BxC,KAAKyC,wB,GAnDOlH,IAAMC,WC6DpBkH,E,YA7Db,WAAY7C,GAAQ,IAAD,8BACjB,4CAAMA,KAoBRwB,OAAS,SAAC7B,GACRc,EAA2Bd,GACxBlC,MAAK,SAAAmD,GACJ,EAAKR,SAAS,CAAE0C,OAAQlC,QAtB5B,EAAKX,MAAQ,CACX6C,OAAQ,MAHO,E,iFAOE,IAAD,OAClBrC,IACGhD,MAAK,SAAAmD,GACJ,EAAKR,SAAS,CAAE0C,OAAQlC,S,2CAIR,IAAD,OACnBH,IACGhD,MAAK,SAAAmD,GACJ,EAAKR,SAAS,CAAE0C,OAAQlC,S,6BAWvBmC,GAAM,IAAD,OACV,GAAIA,EACF,OAAOA,EAAIzG,KAAI,SAAC0G,GAAD,OAAQ,kBAAC,EAAD,eACrB9D,iBAAkB8D,EAAG9D,iBAAiBC,QAAU,IAAM6D,EAAG9D,iBAAiBE,KAC1EG,eAAgByD,EAAGzD,eAAeJ,QAAU,IAAM6D,EAAGzD,eAAeH,KACpEoB,GAAIwC,EAAGxC,GAAIiC,YAAaO,EAAGxD,kBAC3BkD,YAAaM,EAAGvD,gBAChBkD,UAAWK,EAAGL,UACdN,cAAeW,EAAGtD,UAAUpB,KAC5BgE,cAAeU,EAAGtD,UAAUtB,KAAK6E,YACjCzB,OAAQ,EAAKA,QACT,EAAKxB,MATY,CAUrBvD,MAAI,U,+BAKA,IAAD,OACP,GAAI0D,KAAKF,MAAM6C,OAAS,IAChBA,EAAW3C,KAAKF,MAAhB6C,OAER,OACE,yBAAKjC,UAAU,iBACZV,KAAK+C,OAAOJ,GAEb,yBAAK1B,QAAS,SAACC,GAAQ,EAAKrB,MAAMU,QAAQC,KAAK,gBAAmBE,UAAU,gBAC1E,kBAAC,IAAD,CAAiBY,KAAM0B,IAAQC,KAAK,a,GAvDzB1H,IAAMC,WC6CZ0H,E,YA5Cb,WAAYrD,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACX6C,OAAQ,MAHO,E,iFAOE,IAAD,OAClBrC,EAA+BN,KAAKH,MAAMO,MAAMpE,OAAO0D,OACpDpC,MAAK,SAAAmD,GACJ,EAAKR,SAAS,CAAE0C,OAAQlC,S,6BAKvBmC,GAAM,IAAD,OACV,GAAIA,EACF,OAAOA,EAAIzG,KAAI,SAAC0G,GAAD,OAAQ,kBAAC,EAAD,eACrB9D,iBAAkB8D,EAAG9D,iBAAiBC,QAAU,IAAM6D,EAAG9D,iBAAiBE,KAC1EG,eAAgByD,EAAGzD,eAAeJ,QAAU,IAAM6D,EAAGzD,eAAeH,KACpEoB,GAAIwC,EAAGxC,GACPiC,YAAaO,EAAGxD,kBAChBkD,YAAaM,EAAGvD,gBAChBkD,UAAWK,EAAGL,UACdN,cAAeW,EAAGtD,UAAUpB,KAC5BgE,cAAeU,EAAGtD,UAAUtB,KAAK6E,aAC7B,EAAKjD,MATY,CAUrBvD,MAAM,U,+BAMV,GAAI0D,KAAKF,MAAM6C,OAAS,IAChBA,EAAW3C,KAAKF,MAAhB6C,OAER,OACE,yBAAKjC,UAAU,iBACZV,KAAK+C,OAAOJ,Q,GAvCEpH,IAAMC,WC6Bd2H,E,YA5BX,WAAYtD,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GAFE,E,sEAKT,IAAD,OACGuB,EAAWrB,KAAKH,MAAhBwB,OACR,OACI,yBAAKX,UAAU,sCACX,4BAAKV,KAAKH,MAAM1B,MAChB,4BAAK6B,KAAKH,MAAM5B,MAChB,6CAAmB+B,KAAKH,MAAM3B,UAE9B,yBAAKwC,UAAU,sCACf,kBAAC,IAAD,CAAiBY,KAAMC,IAAUN,QAAS,WACtCI,EAAO,EAAKxB,MAAMQ,OAGtB,kBAAC,IAAD,CAAiBiB,KAAMI,IAAQT,QAAS,WACpC,EAAKpB,MAAMU,QAAQC,KAAK,eAAiB,EAAKX,MAAMQ,GAAK,oB,GApBrD9E,IAAMC,WCoEf4H,E,YAnEb,WAAYvD,GAAQ,IAAD,8BACjB,4CAAMA,KAoBRwB,OAAS,SAAC7B,GACRc,EAA+Bd,GAC5BlC,MAAK,SAAAmD,GACJ,EAAKR,SAAS,CAAEoD,WAAY5C,QAtBhC,EAAKX,MAAQ,CACXuD,WAAY,MAHG,E,iFAOE,IAAD,OAClB/C,IACGhD,MAAK,SAAAmD,GACJ,EAAKR,SAAS,CAAEoD,WAAY5C,S,2CAIZ,IAAD,OACnBH,IACGhD,MAAK,SAAAmD,GACJ,EAAKR,SAAS,CAAEoD,WAAY5C,S,6BAkB3BmC,GAAM,IAAD,OACV,GAAIA,EACF,OAAOA,EAAIzG,KAAI,SAAC0G,GAAD,OAAQ,kBAAC,EAAD,eACrB1E,KAAM0E,EAAG1E,KACTD,SAAU2E,EAAG3E,SACbmC,GAAIwC,EAAGxC,GACPpC,KAAM4E,EAAG5E,KAAK6E,YACdzB,OAAQ,EAAKA,QAET,EAAKxB,a,+BAML,IAAD,OACP,GAAIG,KAAKF,MAAMuD,WAAa,IACpBA,EAAerD,KAAKF,MAApBuD,WAER,OACE,yBAAK3C,UAAU,iBACZV,KAAK+C,OAAOM,GAEb,yBAAKpC,QAAS,WAAQ,EAAKpB,MAAMU,QAAQC,KAAK,oBAAuBE,UAAU,gBAC7E,kBAAC,IAAD,CAAiBY,KAAM0B,IAAQC,KAAK,a,GA5DlB1H,IAAMC,WC8FnB8H,E,YA/FX,WAAYzD,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTyD,MAAO,KACPrF,SAAU,KACVD,KAAM,KACNE,KAAM,KACNoB,UAAW,MAPA,E,iFAWE,IAAD,OAChBe,IACKhD,MAAK,SAAAmD,GACE,EAAKZ,MAAMO,MAAMpE,OAAOqE,GACxBC,EAA4B,EAAKT,MAAMO,MAAMpE,OAAOqE,IAC/C/C,MAAK,SAAAkG,GACF,EAAKvD,SAAS,CAAEsD,MAAO9C,EAAKlB,UAAWiE,EAAQtF,SAAUsF,EAAOtF,SAAUD,KAAMuF,EAAOvF,KAAME,KAAMqF,EAAOrF,UAE/G,EAAK8B,SAAS,CAAEsD,MAAO9C,S,iCAK/BV,GAAQ,IAAD,OACdO,EAAuBP,EAAMG,OAAOC,OAC/B7C,MAAK,SAAAmD,GACF,EAAKR,SAAS,CAAEhC,KAAMwC,S,iCAKvBV,GACPC,KAAKC,SAAS,CAAE9B,KAAM4B,EAAMG,OAAOC,U,qCAGxBJ,GACXC,KAAKC,SAAS,CAAE/B,SAAU6B,EAAMG,OAAOC,U,6BAGpCyC,GACH,GAAIA,EACA,OAAOA,EAAIzG,KAAI,SAAC0G,GAAD,OAAQ,4BAAQ1C,MAAO0C,EAAGxC,IAAKwC,EAAGC,kB,gCAMnB,MAA9B9C,KAAKH,MAAMO,MAAMpE,OAAOqE,GACxBC,EAA+BN,KAAKH,MAAMO,MAAMpE,OAAOqE,GAAIL,KAAKF,MAAM7B,KAAM+B,KAAKF,MAAM5B,SAAU8B,KAAKF,MAAM3B,MAEzGmC,EAA4BN,KAAKF,MAAM7B,KAAM+B,KAAKF,MAAM5B,SAAU8B,KAAKF,MAAM3B,MAErF6B,KAAKH,MAAMU,QAAQC,KAAK,iB,+BAGjB,IAAD,OACL,GAAIR,KAAKF,MAAMyD,MAAQ,IACbA,EAAUvD,KAAKF,MAAfyD,MAEV,OACI,yBAAK7C,UAAU,aACX,0BAAM1D,OAAO,QACT,yBAAK0D,UAAU,iBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,uBACX,2BAAOA,UAAU,mBAAmB+C,QAAQ,aAA5C,SAEJ,4BAAQ9C,QAASX,KAAK0D,WAAW7C,KAAKb,MAAOU,UAAU,gBAAgBL,GAAG,aACtE,4BAAQsD,UAAQ,GAAhB,aACC3D,KAAK+C,OAAOQ,KAIrB,yBAAK7C,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,mBAAmBL,GAAG,QAAtC,SAEJ,2BAAOM,QAASX,KAAK4D,WAAW/C,KAAKb,MAAO/B,KAAK,OAAOyC,UAAU,eAAeK,aAAW,OAAOC,mBAAiB,UAExH,yBAAKN,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,mBAAmBL,GAAG,YAAtC,aAEJ,2BAAOpC,KAAK,SAAS4F,IAAI,IAAIlD,QAASX,KAAK8D,eAAejD,KAAKb,MAAOU,UAAU,eAAeK,aAAW,WAAWC,mBAAiB,cAG1I,4BAAQN,UAAU,8BAA8BO,QAAS,SAACC,GAAQ,EAAKC,WAAclD,KAAK,UAA1F,e,GAxFK1C,IAAMC,W,iBCsMpBuI,G,mBAnMX,WAAYlE,GAAQ,IAAD,8BACf,4CAAMA,KAsEVmE,cAAgB,SAACrC,GACb,EAAK1B,SAAS,CAAEqC,YAAaX,KAxEd,EA0EnBsC,cAAgB,SAACtC,GACb,EAAK1B,SAAS,CAAEsC,YAAaZ,KAzE7B,EAAK7B,MAAQ,CACTuD,WAAY,KACZ9D,UAAW,KACX2E,WAAY,KACZC,QAAS,KACTC,UAAW,KACXC,UAAW,KACXC,WAAY,KACZC,QAAS,KACTC,UAAW,KACXC,UAAW,KACXnC,YAAa,KACbC,YAAa,MAdF,E,iFAkBE,IAAD,OAChBjC,IACKhD,MAAK,SAAAmD,GACE,EAAKZ,MAAMO,MAAMpE,OAAOqE,GAC5BC,EAAwB,EAAKT,MAAMO,MAAMpE,OAAOqE,IAC/C/C,MAAK,SAAAkG,GACF,EAAKvD,SAAS,CAAEoD,WAAY5C,EAAKiE,MAAOlB,EAAQjE,UAAWiE,EAAOjE,UAC9D2E,WAAYV,EAAOzE,iBAAiBC,QAASmF,QAASX,EAAOzE,iBAAiBE,KAC9EmF,UAAWZ,EAAOzE,iBAAiBG,OAAQmF,UAAWb,EAAOzE,iBAAiBI,OAC9EmF,WAAYd,EAAOpE,eAAeJ,QAASuF,QAASf,EAAOpE,eAAeH,KAC1EuF,UAAWhB,EAAOpE,eAAeF,OAAQuF,UAAWjB,EAAOpE,eAAeD,OAC1EmD,YAAakB,EAAOnE,kBAAmBkD,YAAaiB,EAAOlE,qBAEhE,EAAKW,SAAS,CAAEoD,WAAY5C,S,6BAIpCmC,GACH,GAAIA,EACA,OAAOA,EAAIzG,KAAI,SAAC0G,GAAD,OAAQ,4BAAQ1C,MAAO0C,EAAGxC,IAAKwC,EAAG1E,KAA1B,KAAkC0E,EAAG5E,KAAK6E,kB,uCAMxD/C,GACbC,KAAKC,SAAS,CAAEiE,WAAYnE,EAAMG,OAAOC,U,uCAE5BJ,GACbC,KAAKC,SAAS,CAAEqE,WAAYvE,EAAMG,OAAOC,U,oCAG/BJ,GACVC,KAAKC,SAAS,CAAEkE,QAASpE,EAAMG,OAAOC,U,oCAE5BJ,GACVC,KAAKC,SAAS,CAAEsE,QAASxE,EAAMG,OAAOC,U,sCAG1BJ,GACZC,KAAKC,SAAS,CAAEmE,UAAWrE,EAAMG,OAAOC,U,sCAE5BJ,GACZC,KAAKC,SAAS,CAAEuE,UAAWzE,EAAMG,OAAOC,U,sCAG5BJ,GACZC,KAAKC,SAAS,CAAEoE,UAAWtE,EAAMG,OAAOC,U,sCAE5BJ,GACZC,KAAKC,SAAS,CAAEwE,UAAW1E,EAAMG,OAAOC,U,sCAU5BJ,GAAQ,IAAD,OACnBO,EAA4BP,EAAMG,OAAOC,OACpC7C,MAAK,SAAAmD,GACF,EAAKR,SAAS,CAAEV,UAAWkB,S,gCAK/BT,KAAKH,MAAMO,MAAMpE,OAAOqE,GACxBC,EAA2BN,KAAKH,MAAMO,MAAMpE,OAAOqE,GAAIL,KAAKF,MAAMoE,WAAYlE,KAAKF,MAAMqE,QAASnE,KAAKF,MAAMsE,UAAWpE,KAAKF,MAAMuE,UAAWrE,KAAKF,MAAMwE,WAAYtE,KAAKF,MAAMyE,QAASvE,KAAKF,MAAM0E,UAAWxE,KAAKF,MAAM2E,UAAWzE,KAAKF,MAAMwC,YAAatC,KAAKF,MAAMyC,YAAavC,KAAKF,MAAMP,WAC7Re,EAAwBN,KAAKF,MAAMoE,WAAYlE,KAAKF,MAAMqE,QAASnE,KAAKF,MAAMsE,UAAWpE,KAAKF,MAAMuE,UAAWrE,KAAKF,MAAMwE,WAAYtE,KAAKF,MAAMyE,QAASvE,KAAKF,MAAM0E,UAAWxE,KAAKF,MAAM2E,UAAWzE,KAAKF,MAAMwC,YAAatC,KAAKF,MAAMyC,YAAavC,KAAKF,MAAMP,WACxQS,KAAKH,MAAMU,QAAQC,KAAK,a,+BAGlB,IAAD,OACL,GAAIR,KAAKF,MAAMuD,WAAa,IAClBA,EAAerD,KAAKF,MAApBuD,WAEV,OACI,yBAAK3C,UAAU,aACX,0BAAM1D,OAAO,QACT,yBAAK0D,UAAU,iBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,uBACX,2BAAOA,UAAU,mBAAmBiE,IAAI,aAAxC,cAEJ,4BAAQhE,QAASX,KAAK4E,gBAAgB/D,KAAKb,MAAOU,UAAU,gBAAgBL,GAAG,aAC3E,4BAAQsD,UAAQ,GAAhB,aACC3D,KAAK+C,OAAOM,KAIrB,yBAAK3C,UAAU,OACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,aACX,oDACA,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,mBAAmBL,GAAG,WAAtC,YAEJ,2BAAOpC,KAAK,OAAO0C,QAASX,KAAK6E,iBAAiBhE,KAAKb,MAAOU,UAAU,eAAeK,aAAW,UAAUC,mBAAiB,aAEjI,yBAAKN,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,mBAAmBL,GAAG,QAAtC,SAEJ,2BAAOpC,KAAK,OAAO0C,QAASX,KAAK8E,cAAcjE,KAAKb,MAAOU,UAAU,eAAeK,aAAW,OAAOC,mBAAiB,UAE3H,yBAAKN,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,mBAAmBL,GAAG,UAAtC,WAEJ,2BAAOpC,KAAK,OAAO0C,QAASX,KAAK+E,gBAAgBlE,KAAKb,MAAOU,UAAU,eAAeK,aAAW,SAASC,mBAAiB,YAE/H,yBAAKN,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,mBAAmBL,GAAG,UAAtC,WAEJ,2BAAOpC,KAAK,OAAO0C,QAASX,KAAKgF,gBAAgBnE,KAAKb,MAAOU,UAAU,eAAeK,aAAW,SAASC,mBAAiB,aAGnI,yBAAKN,UAAU,yBACX,kBAAC,kBAAD,CACIuE,SAAUjF,KAAKgE,cAAcnD,KAAKb,MAClCkF,QAAS,IAAI7C,KACb3B,UAAU,qCAKtB,yBAAKA,UAAU,SACX,yBAAKA,UAAU,aACX,kDACA,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,mBAAmBL,GAAG,cAAtC,YAEJ,2BAAOpC,KAAK,OAAO0C,QAASX,KAAKmF,iBAAiBtE,KAAKb,MAAOU,UAAU,eAAeK,aAAW,UAAUC,mBAAiB,gBAEjI,yBAAKN,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,mBAAmBL,GAAG,WAAtC,SAEJ,2BAAOpC,KAAK,OAAO0C,QAASX,KAAKoF,cAAcvE,KAAKb,MAAOU,UAAU,eAAeK,aAAW,OAAOC,mBAAiB,aAE3H,yBAAKN,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,mBAAmBL,GAAG,aAAtC,WAEJ,2BAAOpC,KAAK,OAAO0C,QAASX,KAAKqF,gBAAgBxE,KAAKb,MAAOU,UAAU,eAAeK,aAAW,SAASC,mBAAiB,eAE/H,yBAAKN,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,mBAAmBL,GAAG,aAAtC,WAEJ,2BAAOpC,KAAK,OAAO0C,QAASX,KAAKsF,gBAAgBzE,KAAKb,MAAOU,UAAU,eAAeK,aAAW,SAASC,mBAAiB,gBAGnI,yBAAKN,UAAU,yBACX,kBAAC,kBAAD,CACIuE,SAAUjF,KAAKiE,cAAcpD,KAAKb,MAClCkF,QAAS,IAAI7C,KACb3B,UAAU,sCAO1B,4BAAQA,UAAU,8BAA+BO,QAAS,SAACC,GAAQ,EAAKC,WAAclD,KAAK,UAA3F,e,GA5LC1C,IAAMC,Y,kBCkChB+J,MA5Bf,WAEE,OACE,kBAACC,EAAA,EAAD,CAAQjF,QAASA,GACf,yBAAKG,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAKA,UAAU,iCACb,kBAACc,EAAA,EAAD,CAAMvD,KAAK,SAASwD,GAAG,UAAUf,UAAU,uBAA3C,UACA,kBAACc,EAAA,EAAD,CAAMvD,KAAK,SAASwD,GAAG,cAAcf,UAAU,uBAA/C,cACA,kBAACc,EAAA,EAAD,CAAMvD,KAAK,SAASwD,GAAG,eAAef,UAAU,uBAAhD,cAEF,kBAAC+E,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWtK,IACjC,kBAACmK,EAAA,EAAD,CAAOI,QAAM,EAACH,KAAK,UAAUC,OAAK,EAACC,UAAWlD,IAC9C,kBAAC+C,EAAA,EAAD,CAAOI,QAAM,EAACH,KAAK,cAAcC,OAAK,EAACC,UAAWxC,IAClD,kBAACqC,EAAA,EAAD,CAAOC,KAAK,cAAcC,OAAK,EAACC,UAAW7B,IAC3C,kBAAC0B,EAAA,EAAD,CAAOI,QAAM,EAACH,KAAK,mBAAmBC,OAAK,EAACC,UAAWhG,IACvD,kBAAC6F,EAAA,EAAD,CAAOI,QAAM,EAACH,KAAK,kBAAkBC,OAAK,EAACC,UAAWtC,IACtD,kBAACmC,EAAA,EAAD,CAAOC,KAAK,eAAeC,OAAK,EAACC,UAAWhG,IAC5C,kBAAC6F,EAAA,EAAD,CAAOC,KAAK,4BAA4BC,OAAK,EAACC,UAAW1C,IACzD,kBAACuC,EAAA,EAAD,CAAOC,KAAK,yBAAyBC,OAAK,EAACC,UAAWtC,IACtD,kBAACmC,EAAA,EAAD,CAAOC,KAAK,qBAAqBC,OAAK,EAACC,UAAW7B,QCpBxC+B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS7F,MACvB,2DCZN8F,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlJ,MAAK,SAAAmJ,GACjCA,EAAaC,kB","file":"static/js/main.878a0843.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Home extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <label>You are welcome!</label>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","\r\n\r\nconst { stringify } = JSON\r\n\r\nconst headers = {\r\n    credentials: 'include',\r\n    'Content-type': 'application/json',\r\n    Accept: 'application/json;charset=UTF-8',\r\n    'Access-Control-Allow-Origin': '*',\r\n}\r\n\r\nheaders.Authorization = 'Basic '// + authdata\r\n\r\n const apiPathUrl = 'https://localhost:8443';\r\n\r\nconst getFullUrl = (url, params) =>\r\n    apiPathUrl + (url || '') + (params ? '?' + queryParams(params) : '')\r\n\r\nfunction queryParams(params) {\r\n    return Object.keys(params)\r\n        .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\r\n        .join('&')\r\n}\r\n\r\nconst credentials = 'same-origin'\r\n\r\nconst async = {\r\n    getJSON({ url, params}) {\r\n        return fetch(getFullUrl(url, params), {\r\n            headers,\r\n            credentials,\r\n        })\r\n    },\r\n    postJSON({ url, data, params, options = {} }) {\r\n        console.log(stringify(data));\r\n        return fetch(getFullUrl(url, params), {\r\n            ...options,\r\n            headers,\r\n            credentials,\r\n            method: 'POST',\r\n            body: stringify(data),\r\n            mode: 'cors',\r\n        });\r\n    },\r\n    deleteJSON({ url, data, options = {} }) {\r\n        return fetch(getFullUrl(url), {\r\n            ...options,\r\n            headers,\r\n            credentials,\r\n            method: 'DELETE',\r\n            body: stringify(data),\r\n        })\r\n    },\r\n}\r\n\r\nexport default (method, ...args) => {\r\n    return async[method](...args)\r\n        .then(response => {\r\n            if (method === 'getJSON') {\r\n                return response.json()\r\n            }\r\n            return response.json()\r\n        })\r\n        .catch(error => {\r\n           // throwNotification('error', 'Серверная ошибка')\r\n        })\r\n}\r\n","import asyncAPI from './asyncApi'\r\n\r\nexport default asyncAPI\r\n","import asyncAPI from '../api'\r\n\r\nconst getAllRoutes = () => {\r\n    return asyncAPI('getJSON', {\r\n        url: `/routes/all`,\r\n    })\r\n}\r\n\r\nconst deleteRoute = (input_route_id) => {\r\n    return asyncAPI('deleteJSON', {\r\n        url: `/routes/` + input_route_id + `/delete`,\r\n    })\r\n}\r\n\r\nconst getAllTypes = () => {\r\n    return asyncAPI('getJSON', {\r\n        url: `/types/all`,\r\n    })\r\n}\r\n\r\nconst getType = (input_id) => {\r\n    return asyncAPI('getJSON', {\r\n        url: `/types/` + input_id,\r\n    })\r\n}\r\n\r\nconst getRoute = (input_id) => {\r\n    return asyncAPI('getJSON', {\r\n        url: `/routes/` + input_id,\r\n    })\r\n}\r\n\r\nconst getTransport = (input_id) => {\r\n    return asyncAPI('getJSON', {\r\n        url: `/transports/` + input_id,\r\n    })\r\n}\r\n\r\nconst getAllTransports = () => {\r\n    return asyncAPI('getJSON', {\r\n        url: `/transports/all`,\r\n    })\r\n}\r\n\r\nconst deleteTransport = (input_transport_id) => {\r\n    return asyncAPI('deleteJSON', {\r\n        url: `/transports/` + input_transport_id + `/delete`,\r\n    })\r\n}\r\n\r\nconst updateTransport = (input_id, input_type, input_capacity, input_name) => {\r\n    const action = {\r\n        type: input_type,\r\n        capacity: input_capacity,\r\n        name: input_name,        \r\n    }\r\n    return asyncAPI('postJSON', {\r\n        url: `/transports/`+ input_id + `/update`,\r\n        data: action,\r\n    })\r\n}\r\n\r\nconst addTransport = (input_type, input_capacity, input_name) => {\r\n    const action = {\r\n        type: input_type,\r\n        capacity: input_capacity,\r\n        name: input_name,        \r\n    }\r\n    return asyncAPI('postJSON', {\r\n        url: `/transports/add`,\r\n        data: action,\r\n    })\r\n}\r\n\r\nconst watchUserRoutes = (input_login) => {\r\n    return asyncAPI('getJSON', {\r\n        url: `/users/` + input_login + `/watchRoutes`,\r\n    })\r\n}\r\n\r\nconst addRoute = (input_d_country, input_d_city, input_d_street, input_d_number, input_country, input_city, input_street, input_number, input_d_date_time, input_date_time, input_transport) => {\r\n    const action = {\r\n        departureAddress: {\r\n            country: input_d_country,\r\n            city: input_d_city,\r\n            street: input_d_street,\r\n            number: input_d_number,\r\n        },\r\n        arrivalAddress: {\r\n            country: input_country,\r\n            city: input_city,\r\n            street: input_street,\r\n            number: input_number,\r\n        },\r\n        departureDateTime: input_d_date_time,\r\n        arrivalDateTime: input_date_time,\r\n        transport : input_transport       \r\n    }\r\n    return asyncAPI('postJSON', {\r\n        url: `/routes/add`,\r\n        data: action,\r\n    })\r\n}\r\n\r\nconst updateRoute = (input_id, input_d_country, input_d_city, input_d_street, input_d_number, input_country, input_city, input_street, input_number, input_d_date_time, input_date_time, input_transport) => {\r\n    const action = {\r\n        departureAddress: {\r\n            country: input_d_country,\r\n            city: input_d_city,\r\n            street: input_d_street,\r\n            number: input_d_number,\r\n        },\r\n        arrivalAddress: {\r\n            country: input_country,\r\n            city: input_city,\r\n            street: input_street,\r\n            number: input_number,\r\n        },\r\n        departureDateTime: input_d_date_time,\r\n        arrivalDateTime: input_date_time,\r\n        transport : input_transport       \r\n    }\r\n    return asyncAPI('postJSON', {\r\n        url: `/routes/` + input_id + '/update',\r\n        data: action,\r\n    })\r\n}\r\n\r\nconst joinRoute = (input_route, input_login) => {\r\n    const action = {\r\n        login: input_login,       \r\n    }\r\n    return asyncAPI('postJSON', {\r\n        url: `/routes/` + input_route + '/join',\r\n        data: action,\r\n    })\r\n}\r\n\r\nconst existByLogin = (input_login) => {\r\n    return asyncAPI('getJSON', {\r\n        url: `/users/` + input_login,\r\n    })\r\n}\r\n\r\n\r\nexport default {\r\n    watchUserRoutes,\r\n    deleteRoute,\r\n    deleteTransport, \r\n    getAllRoutes,\r\n    getAllTransports, \r\n    getAllTypes, \r\n    addTransport, \r\n    addRoute, \r\n    updateTransport,\r\n    joinRoute,\r\n    getType,\r\n    getTransport,\r\n    existByLogin,\r\n    updateRoute,\r\n    getRoute\r\n}\r\n","import createHistory from 'history/createBrowserHistory';\r\nexport default createHistory();","import React from 'react';\r\nimport CommonRequests from '../requests/commonRequests';\r\nimport history from '../history';\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      login: null,\r\n    }\r\n  }\r\n\r\n  loginChange(event) {\r\n    this.setState({ login: event.target.value })\r\n  }\r\n\r\n\r\n  onclick() {\r\n    if (this.props.match.params.id) {\r\n      CommonRequests.joinRoute(this.props.match.params.id, this.state.login); \r\n      this.props.history.push('/routes');\r\n    } else {\r\n      CommonRequests.existByLogin(this.state.login)\r\n        .then(res => {\r\n          if (res == true) {\r\n            this.props.history.push('/users/' + this.state.login + '/watchRoutes');\r\n          } else {\r\n            this.props.history.push('/');\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <form method=\"post\">\r\n          <div>\r\n            <div className=\"input-group mb-3\">\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\" id=\"name\">Login</span>\r\n              </div>\r\n              <input type=\"text\" onInput={this.loginChange.bind(this)} className=\"form-control\" placeholder=\"Name\" aria-label=\"Name\" aria-describedby=\"name\" />\r\n            </div>\r\n          </div>\r\n          <button className=\"btn btn-outline-success p-2\" onClick={(e) => {this.onclick() }} type=\"button\"> Push </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport CommonRequests from '../../requests/commonRequests';\r\nimport { BrowserRouter, Link } from 'react-router-dom';\r\n\r\nclass RouteComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    getOpportunities() {\r\n        const { update } = this.props\r\n        if (this.props.join == true) {\r\n            return ( <div>\r\n\r\n                <div className=\"d-flex justify-content-around mb-4\">\r\n                    <FontAwesomeIcon className=\"m-2\" icon={faTrash} onClick={(e) => { \r\n                        // CommonRequests.deleteRoute(this.props.id);\r\n                        update(this.props.id);\r\n                    }} />\r\n                    <Link type=\"button\" to={`/routes/${this.props.id}/join`} className=\"btn btn-primary m-3\">Join</Link>\r\n                    <FontAwesomeIcon className=\"m-2\" icon={faEdit} onClick={(e) => {this.props.history.push('/routes/' + this.props.id + '/update');  }}/>\r\n                </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    formatDate(date) {\r\n\t\tif (date != null) {\r\n\t\t\tvar monthNames = [\r\n\t\t\t\t\"January\", \"February\", \"March\",\r\n\t\t\t\t\"April\", \"May\", \"June\", \"July\",\r\n\t\t\t\t\"August\", \"September\", \"October\",\r\n\t\t\t\t\"November\", \"December\"\r\n\t\t\t];\r\n\r\n\t\t\tvar day = date.getDate();\r\n\t\t\tvar monthIndex = date.getMonth();\r\n\t\t\tvar year = date.getFullYear();\r\n\r\n\t\t\treturn day + ' ' + monthNames[monthIndex] + ' ' + year;\r\n\t\t}\r\n\t}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card d-flex justify-content-around\">\r\n                <h4>{this.props.transportName}</h4>\r\n                <h6>{this.props.transportType}</h6>\r\n                <h4>From: {this.props.departureAddress}</h4> \r\n                <h6>{this.formatDate(new Date(this.props.depDateTime))}</h6>\r\n                <h4>To: {this.props.arrivalAddress}</h4>\r\n                <h6>{this.formatDate(new Date(this.props.arrDateTime))}</h6>\r\n                <strong>Free seats: {this.props.freeSeats}</strong>\r\n                {this.getOpportunities()}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RouteComponent;","import React from 'react';\r\nimport RouteComponent from './RouteComponent';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport CommonRequests from '../../requests/commonRequests';\r\n\r\nclass Routes extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      routes: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    CommonRequests.getAllRoutes()\r\n      .then(res => {\r\n        this.setState({ routes: res })\r\n      });\r\n  }\r\n\r\n  componentWillMount() {\r\n    CommonRequests.getAllRoutes()\r\n      .then(res => {\r\n        this.setState({ routes: res })\r\n      });\r\n  }\r\n\r\n  update = (input_id) => {\r\n    CommonRequests.deleteRoute(input_id)\r\n      .then(res => {\r\n        this.setState({ routes: res})\r\n      });\r\n  }\r\n\r\n  getArr(arr) {\r\n    if (arr) {\r\n      return arr.map((el) => <RouteComponent\r\n        departureAddress={el.departureAddress.country + ' ' + el.departureAddress.city}\r\n        arrivalAddress={el.arrivalAddress.country + ' ' + el.arrivalAddress.city}\r\n        id={el.id} depDateTime={el.departureDateTime}\r\n        arrDateTime={el.arrivalDateTime}\r\n        freeSeats={el.freeSeats}\r\n        transportName={el.transport.name}\r\n        transportType={el.transport.type.description}\r\n        update={this.update}\r\n        {...this.props}\r\n        join/>);\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    if (this.state.routes) {\r\n      var { routes } = this.state;\r\n    }\r\n    return (\r\n      <div className=\"container row\">\r\n        {this.getArr(routes)}\r\n     \r\n        <div onClick={(e) => { this.props.history.push('/routes/add'); }} className=\"card addCard\">\r\n          <FontAwesomeIcon icon={faPlus} size=\"8x\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;","import React from 'react';\r\nimport RouteComponent from './RouteComponent';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport CommonRequests from '../../requests/commonRequests';\r\n\r\nclass MyRoutes extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      routes: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    CommonRequests.watchUserRoutes(this.props.match.params.login)\r\n      .then(res => {\r\n        this.setState({ routes: res })\r\n      });\r\n  }\r\n\r\n\r\n  getArr(arr) {\r\n    if (arr) {\r\n      return arr.map((el) => <RouteComponent\r\n        departureAddress={el.departureAddress.country + ' ' + el.departureAddress.city}\r\n        arrivalAddress={el.arrivalAddress.country + ' ' + el.arrivalAddress.city}\r\n        id={el.id}\r\n        depDateTime={el.departureDateTime}\r\n        arrDateTime={el.arrivalDateTime}\r\n        freeSeats={el.freeSeats}\r\n        transportName={el.transport.name}\r\n        transportType={el.transport.type.description}\r\n        {...this.props}\r\n        join={false} />);\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    if (this.state.routes) {\r\n      var { routes } = this.state;\r\n    }\r\n    return (\r\n      <div className=\"container row\">\r\n        {this.getArr(routes)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyRoutes;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport CommonRequests from '../../requests/commonRequests';\r\n\r\nclass Transport extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n      }\r\n\r\n    render() {\r\n        const { update } = this.props;\r\n        return (\r\n            <div className=\"card d-flex justify-content-around\">\r\n                <h4>{this.props.name}</h4>\r\n                <h6>{this.props.type}</h6>\r\n                <strong>Capacity: {this.props.capacity}</strong>\r\n\r\n                <div className=\"d-flex justify-content-around mb-2\">\r\n                <FontAwesomeIcon icon={faTrash}  onClick={() => {\r\n                    update(this.props.id);\r\n                }}/>\r\n\r\n                <FontAwesomeIcon icon={faEdit} onClick={() => {\r\n                    this.props.history.push('/transports/' + this.props.id + '/update'); \r\n                    // updateNew();\r\n             }}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Transport;","import React from 'react';\r\nimport Transport from './Transport';\r\nimport CommonRequests from '../../requests/commonRequests';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass TransportList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      transports: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    CommonRequests.getAllTransports()\r\n      .then(res => {\r\n        this.setState({ transports: res })\r\n      });\r\n  }\r\n\r\n  componentWillMount() {\r\n    CommonRequests.getAllTransports()\r\n      .then(res => {\r\n        this.setState({ transports: res })\r\n      });\r\n  }\r\n\r\n  update = (input_id) => {\r\n    CommonRequests.deleteTransport(input_id)\r\n      .then(res => {\r\n        this.setState({ transports: res })\r\n      });\r\n  }\r\n\r\n  // updatenew = () => {\r\n  //   CommonRequests.getAllTransports()\r\n  //     .then(res => {\r\n  //       this.setState({ transports: res })\r\n  //     });\r\n  // }\r\n\r\n  getArr(arr) {\r\n    if (arr) {\r\n      return arr.map((el) => <Transport\r\n        name={el.name}\r\n        capacity={el.capacity}\r\n        id={el.id}\r\n        type={el.type.description}\r\n        update={this.update}\r\n        // updateNew={this.updatenew}\r\n        {...this.props}\r\n      />);\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    if (this.state.transports) {\r\n      var { transports } = this.state;\r\n    }\r\n    return (\r\n      <div className=\"container row\">\r\n        {this.getArr(transports)}\r\n\r\n        <div onClick={() => { this.props.history.push('/transports/add'); }} className=\"card addCard\">\r\n          <FontAwesomeIcon icon={faPlus} size=\"8x\" />\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TransportList;","import React from 'react';\r\nimport CommonRequests from '../../requests/commonRequests';\r\n\r\n\r\nclass InputTransport extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            types: null,\r\n            capacity: null,\r\n            type: null,\r\n            name: null,\r\n            transport: null,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        CommonRequests.getAllTypes()\r\n            .then(res => {\r\n                if (this.props.match.params.id) {\r\n                    CommonRequests.getTransport(this.props.match.params.id)\r\n                        .then(result => {\r\n                            this.setState({ types: res, transport: result, capacity: result.capacity, type: result.type, name: result.name })\r\n                        })\r\n                } else this.setState({ types: res })\r\n            });\r\n    }\r\n\r\n\r\n    typeChange(event) {\r\n        CommonRequests.getType(event.target.value)\r\n            .then(res => {\r\n                this.setState({ type: res })\r\n            })\r\n    }\r\n\r\n\r\n    nameChange(event) {\r\n        this.setState({ name: event.target.value })\r\n    }\r\n\r\n    capacityChange(event) {\r\n        this.setState({ capacity: event.target.value })\r\n    }\r\n\r\n    getArr(arr) {\r\n        if (arr) {\r\n            return arr.map((el) => <option value={el.id}>{el.description}</option>\r\n            );\r\n        }\r\n    }\r\n\r\n    onclick() {\r\n        if (this.props.match.params.id != null) {\r\n            CommonRequests.updateTransport(this.props.match.params.id, this.state.type, this.state.capacity, this.state.name);\r\n\r\n        } else CommonRequests.addTransport(this.state.type, this.state.capacity, this.state.name);\r\n\r\n       this.props.history.push('/transports');\r\n    }\r\n\r\n    render() {\r\n        if (this.state.types) {\r\n            var { types } = this.state;\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <form method=\"post\">\r\n                    <div className=\"container p-2\">\r\n                        <div className=\"input-group mb-3\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <label className=\"input-group-text\" htmlFor=\"inputType\">Type</label>\r\n                            </div>\r\n                            <select onInput={this.typeChange.bind(this)} className=\"custom-select\" id=\"inputType\">\r\n                                <option selected>Choose...</option>\r\n                                {this.getArr(types)}\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"input-group mb-3\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\" id=\"name\">Name</span>\r\n                            </div>\r\n                            <input onInput={this.nameChange.bind(this)} type=\"text\" className=\"form-control\" aria-label=\"Name\" aria-describedby=\"name\" />\r\n                        </div>\r\n                        <div className=\"input-group mb-3\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\" id=\"capacity\">Capacity</span>\r\n                            </div>\r\n                            <input type=\"number\" min=\"0\" onInput={this.capacityChange.bind(this)} className=\"form-control\" aria-label=\"Capacity\" aria-describedby=\"capacity\" />\r\n                        </div>\r\n\r\n                        <button className=\"btn btn-outline-success p-2\" onClick={(e) => { this.onclick(); }} type=\"button\">Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputTransport;","import React from 'react';\r\nimport 'moment/locale/it.js';\r\nimport { DatePicker, DatePickerInput } from 'rc-datepicker';\r\nimport 'rc-datepicker/lib/style.css';\r\nimport CommonRequests from '../../requests/commonRequests';\r\n\r\nclass InputRoute extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            transports: null,\r\n            transport: null,\r\n            depCountry: null,\r\n            depCity: null,\r\n            depStreet: null,\r\n            depNumber: null,\r\n            arrCountry: null,\r\n            arrCity: null,\r\n            arrStreet: null,\r\n            arrNumber: null,\r\n            depDateTime: null,\r\n            arrDateTime: null,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        CommonRequests.getAllTransports()\r\n            .then(res => {\r\n                if (this.props.match.params.id) {\r\n                CommonRequests.getRoute(this.props.match.params.id)\r\n                .then(result => {\r\n                    this.setState({ transports: res, route: result, transport: result.transport, \r\n                        depCountry: result.departureAddress.country, depCity: result.departureAddress.city, \r\n                        depStreet: result.departureAddress.street, depNumber: result.departureAddress.number, \r\n                        arrCountry: result.arrivalAddress.country, arrCity: result.arrivalAddress.city,\r\n                        arrStreet: result.arrivalAddress.street, arrNumber: result.arrivalAddress.number, \r\n                        depDateTime: result.departureDateTime, arrDateTime: result.arrivalDateTime})\r\n                })\r\n            } else this.setState({ transports: res })\r\n            });\r\n    }\r\n\r\n    getArr(arr) {\r\n        if (arr) {\r\n            return arr.map((el) => <option value={el.id}>{el.name}, {el.type.description}</option>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    depCountryChange(event) {\r\n        this.setState({ depCountry: event.target.value })\r\n    }\r\n    arrCountryChange(event) {\r\n        this.setState({ arrCountry: event.target.value })\r\n    }\r\n\r\n    depCityChange(event) {\r\n        this.setState({ depCity: event.target.value })\r\n    }\r\n    arrCityChange(event) {\r\n        this.setState({ arrCity: event.target.value })\r\n    }\r\n\r\n    depStreetChange(event) {\r\n        this.setState({ depStreet: event.target.value })\r\n    }\r\n    arrStreetChange(event) {\r\n        this.setState({ arrStreet: event.target.value })\r\n    }\r\n\r\n    depNumberChange(event) {\r\n        this.setState({ depNumber: event.target.value })\r\n    }\r\n    arrNumberChange(event) {\r\n        this.setState({ arrNumber: event.target.value })\r\n    }\r\n\r\n    depDateChange = (date) => {\r\n        this.setState({ depDateTime: date })\r\n    }\r\n    arrDateChange = (date) => {\r\n        this.setState({ arrDateTime: date })\r\n    }\r\n\r\n    transportChange(event) {\r\n        CommonRequests.getTransport(event.target.value)\r\n            .then(res => {\r\n                this.setState({ transport: res })\r\n            })\r\n    }\r\n\r\n    onclick() {\r\n        if (this.props.match.params.id) {\r\n            CommonRequests.updateRoute(this.props.match.params.id, this.state.depCountry, this.state.depCity, this.state.depStreet, this.state.depNumber, this.state.arrCountry, this.state.arrCity, this.state.arrStreet, this.state.arrNumber, this.state.depDateTime, this.state.arrDateTime, this.state.transport);\r\n        } else CommonRequests.addRoute(this.state.depCountry, this.state.depCity, this.state.depStreet, this.state.depNumber, this.state.arrCountry, this.state.arrCity, this.state.arrStreet, this.state.arrNumber, this.state.depDateTime, this.state.arrDateTime, this.state.transport);\r\n        this.props.history.push('/routes');\r\n    }\r\n\r\n    render() {\r\n        if (this.state.transports) {\r\n            var { transports } = this.state;\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <form method=\"post\">\r\n                    <div className=\"container p-2\">\r\n                        <div className=\"input-group mb-3\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <label className=\"input-group-text\" for=\"inputType\">Transport</label>\r\n                            </div>\r\n                            <select onInput={this.transportChange.bind(this)} className=\"custom-select\" id=\"inputType\">\r\n                                <option selected>Choose...</option>\r\n                                {this.getArr(transports)}\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6\">\r\n                                <div className=\"container\">\r\n                                    <label>Departure address</label>\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\" id=\"country\">Country</span>\r\n                                        </div>\r\n                                        <input type=\"text\" onInput={this.depCountryChange.bind(this)} className=\"form-control\" aria-label=\"Country\" aria-describedby=\"country\" />\r\n                                    </div>\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\" id=\"city\">City</span>\r\n                                        </div>\r\n                                        <input type=\"text\" onInput={this.depCityChange.bind(this)} className=\"form-control\" aria-label=\"city\" aria-describedby=\"city\" />\r\n                                    </div>\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\" id=\"street\">Street</span>\r\n                                        </div>\r\n                                        <input type=\"text\" onInput={this.depStreetChange.bind(this)} className=\"form-control\" aria-label=\"street\" aria-describedby=\"street\" />\r\n                                    </div>\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\" id=\"number\">Number</span>\r\n                                        </div>\r\n                                        <input type=\"text\" onInput={this.depNumberChange.bind(this)} className=\"form-control\" aria-label=\"number\" aria-describedby=\"number\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"input-group mb-3 ml-3\">\r\n                                    <DatePickerInput\r\n                                        onChange={this.depDateChange.bind(this)}\r\n                                        minDate={new Date()}\r\n                                        className='my-custom-datepicker-component'\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <div className=\"container\">\r\n                                    <label>Arrival address</label>\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\" id=\"arrcountry\">Country</span>\r\n                                        </div>\r\n                                        <input type=\"text\" onInput={this.arrCountryChange.bind(this)} className=\"form-control\" aria-label=\"Country\" aria-describedby=\"arrcountry\" />\r\n                                    </div>\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\" id=\"arrcity\">City</span>\r\n                                        </div>\r\n                                        <input type=\"text\" onInput={this.arrCityChange.bind(this)} className=\"form-control\" aria-label=\"city\" aria-describedby=\"arrcity\" />\r\n                                    </div>\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\" id=\"arrstreet\">Street</span>\r\n                                        </div>\r\n                                        <input type=\"text\" onInput={this.arrStreetChange.bind(this)} className=\"form-control\" aria-label=\"street\" aria-describedby=\"arrstreet\" />\r\n                                    </div>\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\" id=\"arrnumber\">Number</span>\r\n                                        </div>\r\n                                        <input type=\"text\" onInput={this.arrNumberChange.bind(this)} className=\"form-control\" aria-label=\"number\" aria-describedby=\"arrnumber\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"input-group mb-3 ml-3\">\r\n                                    <DatePickerInput\r\n                                        onChange={this.arrDateChange.bind(this)}\r\n                                        minDate={new Date()}\r\n                                        className='my-custom-datepicker-component'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <button className=\"btn btn-outline-success p-2\"  onClick={(e) => { this.onclick(); }} type=\"button\">Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputRoute;","import React from 'react';\r\nimport './App.css';\r\nimport Home from './components/Home';\r\nimport Login from './components/Login';\r\nimport Routes from './components/route/Routes';\r\nimport MyRoutes from './components/route/MyRoutes';\r\nimport TransportList from './components/transport/TransportList';\r\nimport InputTransport from './components/transport/InputTransport';\r\nimport InputRoute from './components/route/InputRoute';\r\nimport { Router, Route, Link } from \"react-router-dom\";\r\nimport history from './history';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router history={history}>\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <div className=\"d-flex justify-content-around\">\r\n            <Link type=\"button\" to='/routes' className=\"btn btn-primary m-3\">Routes</Link>\r\n            <Link type=\"button\" to='/transports' className=\"btn btn-primary m-3\">Transports</Link>\r\n            <Link type=\"button\" to='/users/login' className=\"btn btn-primary m-3\">My Routes</Link>\r\n          </div>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route strict path=\"/routes\" exact component={Routes} />\r\n          <Route strict path=\"/transports\" exact component={TransportList} />\r\n          <Route path=\"/routes/add\" exact component={InputRoute} />\r\n          <Route strict path=\"/routes/:id/join\" exact component={Login} />\r\n          <Route strict path=\"/transports/add\" exact component={InputTransport} />\r\n          <Route path=\"/users/login\" exact component={Login} />\r\n          <Route path=\"/users/:login/watchRoutes\" exact component={MyRoutes} />\r\n          <Route path=\"/transports/:id/update\" exact component={InputTransport} />\r\n          <Route path=\"/routes/:id/update\" exact component={InputRoute} />\r\n        </header>\r\n      </div>\r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}